(()=>{"use strict";var __webpack_modules__={308:()=>{eval('\n;// CONCATENATED MODULE: ./src/scripts/utils.js\n// Эти функции и переменные используются и в index.js, и в Card.js.\n// Студент может их объявить в index.js и импортировать в Card.js, но в этом случае будет circular dependency.\n// Поэтому как "Можно лучше" посоветуйте вынести эти функции и переменные в модуль utils.js\n\nconst imageModalWindow = document.querySelector(\'.popup_type_image\');\nconst imageElement = imageModalWindow.querySelector(\'.popup__image\');\nconst imageCaption = imageModalWindow.querySelector(\'.popup__caption\');\nconst ESC_KEYCODE = 27;\n\nconst closeModalWindow = (modalWindow) => {\n  modalWindow.classList.remove(\'popup_is-opened\');\n  document.removeEventListener(\'keyup\', handleEscUp);\n};\n\nconst openModalWindow = (modalWindow) => {\n  modalWindow.classList.add(\'popup_is-opened\');\n  document.addEventListener(\'keyup\', handleEscUp);\n};\n\nconst handleEscUp = (evt) => {\n  evt.preventDefault();\n  isEscEvent(evt, closeModalWindow);\n};\n\nconst isEscEvent = (evt, action) => {\n  if (evt.which === ESC_KEYCODE) {\n    const activePopup = document.querySelector(\'.popup_is-opened\');\n    action(activePopup);\n  }\n};\n\n;// CONCATENATED MODULE: ./src/scripts/Card.js\n\n\nclass Card {\n  constructor(data, cardSelector) {\n    this._text = data.name;\n    this._link = data.link;\n\n    this._cardSelector = cardSelector;\n  }\n\n  _getTemplate() {\n    const cardElement = document\n      .querySelector(this._cardSelector)\n      .content.querySelector(".card")\n      .cloneNode(true);\n\n    return cardElement;\n  }\n\n  _setEventListeners() {\n    this._element\n      .querySelector(".card__like-button")\n      .addEventListener("click", () => this._handleLikeIcon());\n\n    this._element\n      .querySelector(".card__delete-button")\n      .addEventListener("click", () => this._handleDeleteCard());\n\n    this._element\n      .querySelector(".card__image")\n      .addEventListener("click", () => this._handlePreviewPicture());\n  }\n\n  _handleLikeIcon() {\n    this._element\n      .querySelector(".card__like-button")\n      .classList.toggle("card__like-button_is-active");\n  }\n\n  _handleDeleteCard() {\n    this._element.remove();\n\n    // Посоветовать занулять элемент\n    this._element = null;\n  }\n\n  _handlePreviewPicture() {\n    // Студенты изучат способы описания взаимодействия между классами только в следующем спринте.\n    // Эту зависимость студенты будут передавать как хендлер в конструктор класса.\n\n    imageElement.src = this._link;\n    imageElement.alt = `Изображение ${this._link}`;\n    imageCaption.textContent = this._text;\n\n    openModalWindow(imageModalWindow);\n  }\n\n  getView() {\n    // Публичный метод, возвращащий представление карточки;\n    this._element = this._getTemplate();\n    this._setEventListeners();\n\n    this._element.querySelector(\n      ".card__image"\n    ).style.backgroundImage = `url(${this._link})`;\n    this._element.querySelector(".card__title").textContent = this._text;\n\n    return this._element;\n  }\n}\n\n/* harmony default export */ const scripts_Card = (Card);\n\n;// CONCATENATED MODULE: ./src/scripts/FormValidator.js\nclass FormValidator {\n  constructor(config, popupElement) {\n    // В методах за объектом настроек следует обращаться к полям класса, а не передавать их в каждый метод, как это было реализовано ранее;\n    this._inputSelector = config.inputSelector;\n    this._submitButtonSelector = config.submitButtonSelector;\n    this._inactiveButtonClass = config.inactiveButtonClass;\n    this._inputErrorClass = config.inputErrorClass;\n    this._errorClass = config.errorClass;\n\n    this._element = popupElement;\n  }\n\n  _checkInputValidity(inputElement) {\n    if (!inputElement.validity.valid) {\n      this._showInputError(inputElement, inputElement.validationMessage);\n    } else {\n      this._hideInputError(inputElement);\n    }\n  }\n\n  _showInputError(inputElement, errorMessage) {\n    const errorElement = this._element.querySelector(`#${inputElement.id}-error`);\n\n    inputElement.classList.add(this._inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(this._errorClass);\n  }\n\n  _hideInputError(inputElement) {\n    const errorElement = this._element.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.remove(this._inputErrorClass);\n    errorElement.textContent = \'\';\n    errorElement.classList.remove(this._errorClass);\n  }\n\n  // функция публичная, т.к. к ней идет обращение из index.js для переключения состояния кнопки при открытии модального окна\n  disableSubmitButton = () => {\n    this._buttonElement.classList.add(this._inactiveButtonClass);\n    this._buttonElement.disabled = true;\n  }\n\n  _enableSubmitButton = () =>{\n    this._buttonElement.classList.remove(this._inactiveButtonClass);\n    this._buttonElement.disabled = false;\n  }\n\n  _toggleButtonState() {\n    if (this._getInvalidInput()) {\n      this.disableSubmitButton();\n    } else {\n      this._enableSubmitButton()\n    }\n  }\n\n  _getInvalidInput() {\n    return this._inputList.some((inputElement) => {\n      return !inputElement.validity.valid;\n    });\n  }\n\n  _setEventListeners() {\n    this._inputList = Array.from(this._element.querySelectorAll(this._inputSelector));\n    this._buttonElement = this._element.querySelector(this._submitButtonSelector);\n\n    this._inputList.forEach((inputElement) => {\n      inputElement.addEventListener(\'input\', () => {\n        this._checkInputValidity(inputElement);\n        this._toggleButtonState();\n      });\n    });\n  }\n\n  enableValidation() {\n    this._element.addEventListener(\'submit\', (evt) => {\n      evt.preventDefault();\n    });\n\n    this._setEventListeners();\n  }\n}\n\n/* harmony default export */ const scripts_FormValidator = (FormValidator);\n\n;// CONCATENATED MODULE: ./src/scripts/index.js\n\n\n\n\n\n\n\n// Можно лучше: Массив изначальных карточек следует поместить в отдельный файл и подключать его перед index.js\nconst initialCards = [\n  {\n    name: "Архыз",\n    link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg",\n  },\n  {\n    name: "Челябинская область",\n    link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg",\n  },\n  {\n    name: "Иваново",\n    link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg",\n  },\n  {\n    name: "Камчатка",\n    link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg",\n  },\n  {\n    name: "Холмогорский район",\n    link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg",\n  },\n  {\n    name: "Байкал",\n    link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg",\n  },\n];\n\n// Врапперы\nconst placesWrap = document.querySelector(".places__list");\nconst editFormModalWindow = document.querySelector(".popup_type_edit");\nconst cardFormModalWindow = document.querySelector(".popup_type_new-card");\nconst scripts_imageModalWindow = document.querySelector(".popup_type_image");\n// С submit ребята еще плохо работают.\n\n// Кнопки и прочие дом узлы\nconst openEditFormButton = document.querySelector(".profile__edit-button");\nconst openCardFormButton = document.querySelector(".profile__add-button");\n\n// DOM узлы профиля\nconst profileTitle = document.querySelector(".profile__title");\nconst profileDescription = document.querySelector(".profile__description");\n\n// Данные форм и элементы форм\nconst titleInputValue = editFormModalWindow.querySelector(\n  ".popup__input_type_name"\n);\nconst descriptionInputValue = editFormModalWindow.querySelector(\n  ".popup__input_type_description"\n);\nconst cardNameInputValue = cardFormModalWindow.querySelector(\n  ".popup__input_type_card-name"\n);\nconst cardLinkInputValue = cardFormModalWindow.querySelector(\n  ".popup__input_type_url"\n);\n// решение на минималках. Конечно, студент может корректно обобрать велью инпутов в форме.\n\nconst cardSelector = ".card-template";\nconst validationConfig = {\n  formSelector: ".popup__form",\n  inputSelector: ".popup__input",\n  submitButtonSelector: ".popup__button",\n  inactiveButtonClass: "popup__button_disabled",\n  inputErrorClass: "popup__input_type_error",\n  errorClass: "popup__error_visible",\n};\n\nconst editFormValidator = new scripts_FormValidator(\n  validationConfig,\n  editFormModalWindow\n);\nconst cardFormValidator = new scripts_FormValidator(\n  validationConfig,\n  cardFormModalWindow\n);\n\neditFormValidator.enableValidation();\ncardFormValidator.enableValidation();\n\nconst handleProfileFormSubmit = (evt) => {\n  evt.preventDefault();\n  profileTitle.textContent = titleInputValue.value;\n  profileDescription.textContent = descriptionInputValue.value;\n  closeModalWindow(editFormModalWindow);\n};\n\nconst handleCardFormSubmit = (evt) => {\n  evt.preventDefault();\n  renderCard(\n    {\n      name: cardNameInputValue.value,\n      link: cardLinkInputValue.value,\n    },\n    placesWrap\n  );\n  closeModalWindow(cardFormModalWindow);\n  // Можно лучше: очищать форму после добавления новой карточки. Можно лучше: использовать .reset()\n  cardNameInputValue.value = "";\n  cardLinkInputValue.value = "";\n};\n\nconst createCard = (data) => {\n  const card = new scripts_Card(data, cardSelector);\n\n  return card.getView();\n};\n\nconst renderCard = (data, wrap) => {\n  const card = createCard(data);\n  wrap.prepend(card);\n};\n\n// EventListeners\neditFormModalWindow.addEventListener("submit", handleProfileFormSubmit);\ncardFormModalWindow.addEventListener("submit", handleCardFormSubmit);\n\nopenEditFormButton.addEventListener("click", () => {\n  titleInputValue.value = profileTitle.textContent;\n  descriptionInputValue.value = profileDescription.textContent;\n  openModalWindow(editFormModalWindow);\n});\n\nopenCardFormButton.addEventListener("click", () => {\n  // Если студент ресетит поля ввода после сабмита, то необходимо делать кнопку сохранения неактивной и добавлять ей соответствующий класс.\n  // Важно: это одно из возможных решений. Студент может реализовать валидацию для пустей полей ввода иным способом. Главное, чтобы в его коде не было дублирования\n  cardFormValidator.disableSubmitButton();\n  openModalWindow(cardFormModalWindow);\n});\n\neditFormModalWindow.addEventListener("click", (evt) => {\n  if (\n    evt.target.classList.contains("popup") ||\n    evt.target.classList.contains("popup__close")\n  ) {\n    closeModalWindow(editFormModalWindow);\n  }\n});\ncardFormModalWindow.addEventListener("click", (evt) => {\n  if (\n    evt.target.classList.contains("popup") ||\n    evt.target.classList.contains("popup__close")\n  ) {\n    closeModalWindow(cardFormModalWindow);\n  }\n});\nscripts_imageModalWindow.addEventListener("click", (evt) => {\n  if (\n    evt.target.classList.contains("popup") ||\n    evt.target.classList.contains("popup__close")\n  ) {\n    closeModalWindow(scripts_imageModalWindow);\n  }\n});\n\n// Render\ninitialCards.forEach((data) => {\n  renderCard(data, placesWrap);\n});\n\n/* Саммари:\n * В этом спринте нет нового функционала нет, студенты только рефакторят свой код, переписывают на классы.\n * Карточки создаются с помощью публичного метода класса Card\n * Должно быть создано 2 объекта валидации. Вызов функции enableValidation для каждой из форм вызывается только один раз\n * Не должно быть дублирования кода - функции/закрытия открытия советуем выносить в utils.js\n * */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///308\n')}},__webpack_exports__={};__webpack_modules__[308]()})();